//
//╔══════════════════════════════════════════════════════════
//║ Процедура: D_DOPL()
//║ Автор: Комлев О.В.
//║ Дата разработки: 10/09/94.
//║ Назначение:
//║       получение пачек документов N 5 по начислению надбавки
//║       к зарплате и денежной компенсации.
//║ Возвращает:
//║       NIL
//║ Параметры:
//║       нет.
//║ Используемые внешние переменные:
//║       нет.
//║ Используемые процедуры и функции:
//║       BegInit(), GetMonth(), AskUser(), pFilPoz().
//║ Используемые файлы для настройки:
//║  \JS\inidpl.dbf, \ST\fdopl.dbf, \ST\fkomp.dbf
//║ Побочные эффекты: изменеие файла fvnum.dbf.
//║ Примечания: нет.
//╚═══════
//

#define    BEEP_ASK     TONE( 3000, 0 )
#include "setcurs.ch"
#include "inkey.ch"
#include "set.ch"
#include "buh.ch"
Function Main(var1)
  local m_month:=0,m_ddoc,m_prc,m_proc1:=0,m_proc2:=0
  local m_shpz,m_kopldpl,m_koplkmp,m_npchdpl,m_npchkmp,m_kopudpl
  local m_mp,m_komp,m_overkmp,m_x,m_recno1,m_recno2
  local GETLIST:={}
  local m_time:=TIME(),m_env,m_path,m_name,rstr,rstr1
  local m_var:=IF(var1==NIL,"",alltrim(var1)),m_screen:=SAVESCREEN(0,0,MAXROW(),MAXCOL())

   // Начальная установка системных переменных///////////////////////////////
   BegInit()                                                               //

   SET (_SET_EXIT        , .t. )
   USE       ("d:\buhgal\js\init.dbf")
             M_SYSPATH  :=  ALLTRIM(init->sys)  // каталог с  системной информацией
   PUBLIC    M_BUFPATH  :=  ALLTRIM(init->bufpath)  // каталог с буферной БД
   PUBLIC    M_MAINPATH :=  ALLTRIM(init->mainpath) // каталог с основной БД
   PUBLIC    M_SPRPATH  :=  ALLTRIM(init->sprpath)  // каталог со справочниками
   PUBLIC    M_MASH     :=  ALLTRIM(init->mash)     // каталог для машинограмм
   PUBLIC    M_STRUCT   :=  ALLTRIM(init->struct)   // каталог с пустыми структурами файлов
   PUBLIC    M_oldsys   :=  ALLTRIM(init->oldsys)
   PUBLIC    M_PLATPATH :=  ALLTRIM(init->platpath)  // каталог для копий
   PUBLIC    M_WORKPATH :=  m_var
   PUBLIC    p_help_code  := 0                     // параметр для экранного HELP
   PUBLIC    F_MENU     :=  ALLTRIM(init->menu) // файл меню
   PUBLIC    p_npr:=""
   m_name:=init->name
   CLOSE  init

   PUBLIC a_menu:={}
   CLEARWIN(0,0,MAXROW(),MAXCOL(),'N/W','░')
   SET KEY K_F10 TO Calc
   SETKEY(K_INS,{||READINSERT(.NOT.READINSERT()),;
                   SETCURSOR(IF(READINSERT(),SC_INSERT,SC_NORMAL))})
   KEYBOARD ""
   InitParPrn()
   // ****************************************///////////////////////////////

   SetColor ( "N+/W,GR+/N" )
   SET CURSOR OFF
   CLS

   // Bвод бухгалтерского месяца/////////////////////////////////////////////
      m_month := GetMonth ()                                               //
   IF m_month == -1                                                        //
      RETURN                                                               //
   ENDIF                                                                   //
   // **************************/////////////////////////////////////////////


   CLS
   SET CURSOR ON
   SET ESCAPE ON

   // Начальная установка m_prc, m_shpz, m_kopldpl, /////////////////////////
   //                     m_koplkmp, m_komp, m_overkmp///////////////////////
   USE D:\BUHGAL\JS\inidpl NEW READONLY                                    //
   m_prc := inidpl->prc          //процент доплат                          //
   m_shpz := inidpl->shpz        //ШПЗ для мат.помощи                      //
   m_kopldpl := inidpl->kopldpl  //код оплат для доплат                    //
   m_koplkmp := inidpl->koplkmp  //код оплат для мат.помощи                //
   m_mp := inidpl->komp          //размер мат.помощи                       //
   m_overkmp := inidpl->overkmp  //ограничение компенсации                 //
   m_npchdpl := inidpl->npchdpl  //номер пачки для доплат                  //
   m_npchkmp := inidpl->npchkmp  //номер пачки для мат.помощи              //
   m_kopudpl := inidpl->kopudpl  //коды на которые начисляется доплата     //
   close inidpl                                                            //
   // ***********************************************////////////////////////

   // Вывод параметров на экран дисплея для коррекции////////////////////////
   rstr1:='25/01/00'
   if m_month<10
      m_x:=1
   else
      m_x:=2
   endif
   rstr:=stuff(rstr1,6-m_x,m_x,ALLTRIM(str(m_month)))
   m_ddoc:=ctod(stuff(rstr,7,2,right(ALLTRIM(str(year(date()))),2)))
   USE D:\BUHGAL\SP\SP07 INDEX d:\BUHGAL\SP\SP07 NEW READONLY              //
   USE D:\BUHGAL\SP\SP08 INDEX d:\BUHGAL\SP\SP08 NEW READONLY              //
   SetColor ( ten_clr )                                                    //
   @9,16 CLEAR TO 15,52                                                    //
   SetColor ( vvod_clr )                                                   //
   @8,14 CLEAR TO 14,50                                                    //
   DISPBOX(8,14,14,50,1,vvod_clr)                                          //
   @09,15 say 'Процент доплат            ' get m_prc picture '99999.99'    //
                                                                           //
   @10,15 say 'Размер мат.помощи         ' get m_mp picture '99999999'     //
                                                                           //
//   @11,15 say 'Размер ограничения (комп.)' get m_overkmp picture '99999999'//
                                                                           //
   @11,15 say 'Дата форм. документов     ' get m_ddoc                      //
                                                                           //
   @12,15 say 'ШПЗ для мат.помощи        ' get m_shpz picture 'NNNNNNNN' VALID  f_valid('sp07->ksash','sp07->naim7',25,15)
                                                                           //
//   @14,15 say 'Код оплат для доплат      ' get m_kopldpl picture '99999999' valid f_valid("sp08->kopu","sp08->name8",25,15)
                                                                           //
   @13,15 say 'Код оплат для доплат      ' get m_kopldpl picture '99999999' valid f_valid("sp08->kopu","sp08->name8",25,15)
   read                                                                    //
      IF( LASTKEY() == K_ESC )                                             //
          BEEP_ASK                                                         //
          IF( AskUser( ,"ПРЕРВАТЬ программу , Вы уверены ?", 2 ))          //
            RETURN                                                         //
          ENDIF                                                            //
          KEYBOARD   ""                                                    //
      ENDIF                                                                //
                                                                           //
   CLOSE SP07                                                              //
   CLOSE SP08                                                              //
   // ***********************************************////////////////////////

   SetColor ( "N+/W,GR+/N" )
   SET CURSOR OFF
   CLS

   //Открытие справочника работников/////////////////////////////////////////
   use d:\buhgal\sp\sp10 index d:\buhgal\sp\sp10 NEW READONLY              //
   //*******************************/////////////////////////////////////////

   //Создание служеб. файла для определения начислений///////////////////////
   //работникам в разрезе таб. номеров///////////////////////////////////////
   SELECT 0                                                                //
   CREATE d:\buhgal\temp\fdopl FROM d:\buhgal\st\fdopl                       //
   INDEX ON fdopl->tabn TO d:\buhgal\temp\fdopl                              //
   //*************************************************///////////////////////

   //Создание служеб. файла для определения начислений///////////////////////
   //работникам в разрезе таб.ном.+ШПЗ+Бригада///////////////////////////////
   SELECT 0                                                                //
   CREATE d:\buhgal\temp\fkomp FROM d:\buhgal\st\fkomp                       //
   INDEX ON fkomp->tabn+fkomp->ksash+fkomp->brgd TO d:\buhgal\temp\fkomp     //
   //*************************************************///////////////////////

   //Инициализация индикатора N 1////////////////////////////////////////////
   m_proc1 := Workinit ( 8,10,10,70, "Вычисление сумм для доплат по первичным документам ОБД" )
   WorkWindow ( m_proc1 )                                                  //
   //****************************////////////////////////////////////////////

   //Открытие базы данных документов по начислению ЗП////////////////////////
   USE d:\buhgal\mn\fz1 NEW                                                //
   USE d:\buhgal\mn\fz2 NEW                                                //
   USE d:\buhgal\mn\fz3 NEW                                                //
   //************************************************////////////////////////

   SELECT fz1
   GOTO TOP
   DO WHILE ! fz1->( Eof () )
      //Удаление документов N 5 при повторном запуске программы//////////////
      //в том же месяце//////////////////////////////////////////////////////
      IF fz1->vdoc==5.AND.BuhMonth(fz1->ddoc)==Buhmonth(m_ddoc)            //
         IF pFilPoz ( 'fz2' , 'vnum1' , 'fz1' )                            //
            DO WHILE fz2->vnum1 == fz1->vnum1 .AND. !fz2->(EOF())          //
               //Проходим по записям fz2, связанным с текущей записью fz1  //
               IF pFilPoz ( 'fz3' , 'vnum2' , 'fz2' )                      //
                  DO WHILE fz3->vnum2 == fz2->vnum2 .AND. !fz3->(EOF())    //
                     fz3->(dbdelete())                                     //
                     fz3->(DBSKIP())                                       //
                  ENDDO                                                    //
               ENDIF                                                       //
               fz2->(DBDELETE())                                           //
               fz2->(DBSKIP())                                             //
            ENDDO                                                          //
         ENDIF                                                             //
         fz1->(dbdelete())                                                 //
         fz1->(dbskip())                                                   //
         LOOP                                                              //
      ENDIF                                                                //
      //*******************************************************//////////////

      //Определение полной суммы начислений и определение суммы начислений///
      //с кодом  =m_kopudpl=  в разрезе таб.номеров (файл fdopl.dbf);////////
      //определение суммы начислений с кодом  =m_kopudpl=  в разрезе таб.но-/
      //меров+ШПЗ+Бригада (файл fkomp.dbf)///////////////////////////////////
      IF BuhMonth ( fz1->ddoc ) == m_month
         IF pFilPoz ( 'fz2' , 'vnum1' , 'fz1' )
            DO WHILE fz2->vnum1 == fz1->vnum1 .AND. !fz2->(EOF())
               //Проход по записям fz2, связанным с текущей записью fz1
               sp10->(DBSEEK(fz2->tabn))
//               IF fz1->vdoc != 38.AND.sp10->(FOUND()).AND.sp10->kpn<>'4' && Если таб.
               IF fz1->vdoc != 38.AND.sp10->(FOUND()).AND.sp10->kpn<>'4'.AND.sp10->kpn<>'6'.AND.sp10->kpn<>'7' && Если таб.
                  && номера нет в справочнике  не суммировать
                  && не эксплуатация автопарка
                  IF pFilPoz ( 'fz3' , 'vnum2' , 'fz2' )
                     DO WHILE fz3->vnum2 == fz2->vnum2 .AND. !fz3->(EOF())
                        //Проход по записям fz3, связанным с текущей записью fz2
                        SELECT fdopl
                        SEEK fz2->tabn
                        IF .not.FOUND()
                           APPEND BLANK
                           fdopl->tabn := fz2->tabn
                           fdopl->sum := 0
                           fdopl->sumpol := 0
                           fdopl->prc := m_prc
                           fdopl->kass := sp10->kass
                        ENDIF

                        fdopl->sumpol += fz3->sum //полная сумма

                        //if fz3->kopu>='001'.and.fz3->kopu<='003'
                        if AT(fz3->kopu,m_kopudpl)!=0
                           fdopl->sum := fdopl->sum+fz3->sum //сумма по кодам, на
                                                            // котор. нач. доплаты (например 001, 002, 003)
                           fkomp->(DBSEEK(fz2->tabn+fz2->ksash+fz2->brgd))
                           IF .NOT.fkomp->(FOUND())
                              fkomp->(dbappend())
                              fkomp->tabn := fz2->tabn
                              fkomp->ksash := fz2->ksash
                              fkomp->brgd := fz2->brgd
                              fkomp->sum := 0
                              fkomp->sumkmp := 0
                           ENDIF

                           fkomp->sum += fz3->sum //сумма по кодам, на котор. нач. доплаты
                                                 // (например 001, 002, 003)

                        endif
                        SKIP 1 ALIAS fz3
                     ENDDO
                  ENDIF
               ENDIF
               SKIP 1 ALIAS fz2
            ENDDO
         ENDIF
      ENDIF
      //******************************************************************///

      SELECT fz1
      WorkDisplay(m_proc1, RECNO()/LASTREC()) //отметка индикатора N 1
      SKIP
   ENDDO
   WorkDisplay(m_proc1, 1.00) //закрытие индикатора N 1

   close fz1                                                               //
   close fz2                                                               //
   close fz3                                                               //

   //Инициализация индикатора N 1////////////////////////////////////////////
   m_proc1 := Workinit ( 8,10,10,70, "Вычисление сумм для доплат по первичным документам ББД" )
   WorkWindow ( m_proc1 )                                                  //
   //****************************////////////////////////////////////////////

   //Открытие базы данных документов по начислению ЗП////////////////////////
   USE d:\buhgal\bf\fz1 NEW                                                //
   USE d:\buhgal\bf\fz2 NEW                                                //
   USE d:\buhgal\bf\fz3 NEW                                                //
   //************************************************////////////////////////

   SELECT fz1
   GOTO TOP
   DO WHILE ! fz1->( Eof () )
      //Удаление документов N 5 при повторном запуске программы//////////////
      //в том же месяце//////////////////////////////////////////////////////
      IF fz1->vdoc==5.AND.BuhMonth(fz1->ddoc)==Buhmonth(m_ddoc)            //
         IF pFilPoz ( 'fz2' , 'vnum1' , 'fz1' )                            //
            DO WHILE fz2->vnum1 == fz1->vnum1 .AND. !fz2->(EOF())          //
               //Проходим по записям fz2, связанным с текущей записью fz1  //
               IF pFilPoz ( 'fz3' , 'vnum2' , 'fz2' )                      //
                  DO WHILE fz3->vnum2 == fz2->vnum2 .AND. !fz3->(EOF())    //
                     fz3->(dbdelete())                                     //
                     fz3->(DBSKIP())                                       //
                  ENDDO                                                    //
               ENDIF                                                       //
               fz2->(DBDELETE())                                           //
               fz2->(DBSKIP())                                             //
            ENDDO                                                          //
         ENDIF                                                             //
         fz1->(dbdelete())                                                 //
         fz1->(dbskip())                                                   //
         LOOP                                                              //
      ENDIF                                                                //
      //*******************************************************//////////////

      //Определение полной суммы начислений и определение суммы начислений///
      //с кодом  =m_kopudpl=  в разрезе таб.номеров (файл fdopl.dbf);////////
      //определение суммы начислений с кодом  =m_kopudpl=  в разрезе таб.но-/
      //меров+ШПЗ+Бригада (файл fkomp.dbf)///////////////////////////////////
      IF BuhMonth ( fz1->ddoc ) == m_month
         IF pFilPoz ( 'fz2' , 'vnum1' , 'fz1' )
            DO WHILE fz2->vnum1 == fz1->vnum1 .AND. !fz2->(EOF())
               //Проход по записям fz2, связанным с текущей записью fz1
               sp10->(DBSEEK(fz2->tabn))
//               IF fz1->vdoc != 38.AND.sp10->(FOUND()).AND.sp10->kpn<>'4' && Если таб.
               IF fz1->vdoc != 38.AND.sp10->(FOUND()).AND.sp10->kpn<>'4'.AND.sp10->kpn<>'6'.AND.sp10->kpn<>'7'  && Если таб.
                  && номера нет в справочнике  не суммировать
                  && не эксплуатация автопарка
                  IF pFilPoz ( 'fz3' , 'vnum2' , 'fz2' )
                     DO WHILE fz3->vnum2 == fz2->vnum2 .AND. !fz3->(EOF())
                        //Проход по записям fz3, связанным с текущей записью fz2
                        SELECT fdopl
                        SEEK fz2->tabn
                        IF .not.FOUND()
                           APPEND BLANK
                           fdopl->tabn := fz2->tabn
                           fdopl->sum := 0
                           fdopl->sumpol := 0
                           fdopl->prc := m_prc
                           fdopl->kass := sp10->kass
                        ENDIF

                        fdopl->sumpol += fz3->sum //полная сумма

                        //if fz3->kopu>='001'.and.fz3->kopu<='003'
                        if AT(fz3->kopu,m_kopudpl)!=0
                           fdopl->sum := fdopl->sum+fz3->sum //сумма по кодам, на
                                                            // котор. нач. доплаты (например 001, 002, 003)
                           fkomp->(DBSEEK(fz2->tabn+fz2->ksash+fz2->brgd))
                           IF .NOT.fkomp->(FOUND())
                              fkomp->(dbappend())
                              fkomp->tabn := fz2->tabn
                              fkomp->ksash := fz2->ksash
                              fkomp->brgd := fz2->brgd
                              fkomp->sum := 0
                              fkomp->sumkmp := 0
                           ENDIF

                           fkomp->sum += fz3->sum //сумма по кодам, на котор. нач. доплаты
                                                 // (например 001, 002, 003)

                        endif
                        SKIP 1 ALIAS fz3
                     ENDDO
                  ENDIF
               ENDIF
               SKIP 1 ALIAS fz2
            ENDDO
         ENDIF
      ENDIF
      //******************************************************************///

      SELECT fz1
      WorkDisplay(m_proc1, RECNO()/LASTREC()) //отметка индикатора N 1
      SKIP
   ENDDO
   WorkDisplay(m_proc1, 1.00) //закрытие индикатора N 1

   close sp10
   close fdopl
   myedit()
   use d:\buhgal\temp\fdopl new
   index on fdopl->tabn to d:\buhgal\temp\fdopl

   //Инициализация индикатора N 2////////////////////////////////////////////
   m_proc2 := Workinit(14,10,16,70, "Расчет сумм для доплат")              //
   WorkWindow ( m_proc2 )                                                  //
   //****************************////////////////////////////////////////////

   //Определение размера доплат//////////////////////////////////////////////
   m_proc1:=0                                                              //
   fdopl->(DBGOTOP())                                                      //
   fkomp->(DBGOTOP())                                                      //
   DO WHILE ! fdopl->( Eof () )                                            //
      //Расчет доплат в разрезе таб. номеров и коррекция полной суммы нач. //
      fdopl->sumdpl:=INT((fdopl->prc*fdopl->sum/100)/0.01)*0.01

	IF fdopl->sumdpl-m_mp < 0
         fdopl->sumpol:=fdopl->sumdpl                                      //
         fdopl->sumdpl:=0                                                  //
	ELSE
         fdopl->sumpol:=m_mp                                               //
         fdopl->sumdpl-=m_mp                                               //
	ENDIF

      m_komp:=fdopl->sumdpl
                                                                           //
      //Расчет компенсации в разрезе таб. номеров, шифров затрат и бригад  //
      m_x:=m_komp                                                          //
      m_recno1:=fkomp->(RECNO())                                           //
      DO WHILE fkomp->tabn==fdopl->tabn.AND..NOT.fkomp->(EOF())            //
         IF fdopl->sum<>0 .AND. m_komp<>0                                  //
            fkomp->sumkmp:=INT((fkomp->sum*m_komp/fdopl->sum)/0.01)*0.01   //
            m_x-=fkomp->sumkmp                                             //
         ELSE                                                              //
            fkomp->(DBDELETE())                                            //
         ENDIF                                                             //
         m_recno1:=fkomp->(RECNO())                                        //
         fkomp->(DBSKIP(1))                                                //
      ENDDO                                                                //
      IF m_x<>0 .AND. fdopl->sum<>0  .AND. m_komp<>0                       //
         fkomp->(DBGOTO(m_recno1))                                         //
         fkomp->sumkmp+=m_x                                                //
         fkomp->(DBSKIP(1))                                                //
      ENDIF                                                                //
                                                                           //
      IF fdopl->sumdpl==0 .AND. fdopl->sumpol==0                                                 //
         fdopl->(DBDELETE())                                               //
      ENDIF                                                                //
                                                                           //
      fdopl->(DBskip())                                                    //
      WorkDisplay(m_proc2, (m_proc1++)/fdopl->(LASTREC())) //отметка индикатора N 2
  ENDDO                                                                    //
  WorkDisplay ( m_proc2 , 1.00 ) //закрытие индикатора N 2                 //
   //**************************//////////////////////////////////////////////

   use d:\BUHGAL\JS\fvnum new

   //Введение мат.помощи отдельными документами в разрезе таб.номеров////////
   fdopl->(dbgotop())                                                      //
   do while .not.fdopl->(EOF())                                            //
      fz1->(dbappend())                                                    //
      fz1->npch:=m_npchkmp+(m_month-INT(m_month/10)*10)*100                //
      fz1->ndoc:=VAL(SUBSTR(fdopl->tabn,1,2))                              //
      fz1->vdoc:=5                                                         //
      fz1->ddoc:=m_ddoc                                                    //
      fz1->vnum1:=fvnum->vnum1++                                           //
      do while .not.fdopl->(eof()) .and. fz1->ndoc==VAL(SUBSTR(fdopl->tabn,1,2))
         fz2->(dbappend())                                                 //
         fz2->tabn:=fdopl->tabn                                            //
         fz2->ksash:=m_shpz                                                //
         fz2->vnum1:=fz1->vnum1                                            //
         fz2->vnum2:=fvnum->vnum2++                                        //
         fz3->(dbappend())                                                 //
         fz3->sum:=fdopl->sumpol                                           //
         fz3->vnum2:=fz2->vnum2                                            //
         fz3->kopu:=m_koplkmp                                              //
         fdopl->(dbskip())                                                 //
      enddo                                                                //
   enddo                                                                   //
   //************************************************************////////////

   //Введение доплат      отдельными документами в разрезе таб.номеров///////
   //ШПЗ и бригад////////////////////////////////////////////////////////////
   fkomp->(dbgotop())                                                      //
   do while .not.fkomp->(EOF())                                            //
      fz1->(dbappend())                                                    //
      fz1->npch:=m_npchdpl+(m_month-INT(m_month/10)*10)*100                //
      fz1->ndoc:=VAL(SUBSTR(fkomp->tabn,1,2))                              //
      fz1->vdoc:=5                                                         //
      fz1->ddoc:=m_ddoc                                                    //
      fz1->vnum1:=fvnum->vnum1++                                           //
      do while .not.fkomp->(eof()) .and. fz1->ndoc == VAL(SUBSTR(fkomp->tabn,1,2))
         fz2->(dbappend())                                                 //
         fz2->tabn:=fkomp->tabn                                            //
         fz2->ksash:=fkomp->ksash                                          //
         fz2->brgd:=fkomp->brgd                                            //
         fz2->vnum1:=fz1->vnum1                                            //
         fz2->vnum2:=fvnum->vnum2++                                        //
         fz3->(dbappend())                                                 //
         fz3->sum:=fkomp->sumkmp                                           //
         fz3->vnum2:=fz2->vnum2                                            //
         fz3->kopu:=m_kopldpl                                              //
         fkomp->(dbskip())                                                 //
      enddo                                                                //
   enddo                                                                   //
   //*****************************************************************///////

   close fz1                                                               //
   close fz2                                                               //
   close fz3                                                               //
   close fvnum                                                             //
//   close sp10                                                              //
   close fdopl                                                             //
   close fkomp                                                             //

   ferase("d:\buhgal\temp\fdopl.dbf" )                                     //
   ferase("d:\buhgal\temp\fdopl.ntx" )                                     //
   ferase("d:\buhgal\temp\fkomp.dbf" )                                     //
   ferase("d:\buhgal\temp\fkomp.ntx" )                                     //

   SET ESCAPE OFF

   SetColor ( dos_clr )

   SHOWTIME()
   RESTSCREEN(0,0,MAXROW(),MAXCOL(),m_SCREEN)
//   CLS
RETURN .t.

Function myedit()
  LOCAL m_inkey,i,m_browse,m_col,getlist:={},;
        a_col:={{{||field->tabn},"Табельный;  номер"},;
                {{||sp10->(dbseek(field->tabn)),;
                    IF(sp10->(FOUND()),;
                       LEFT(ALLTRIM(sp10->fam)+' '+LEFT(sp10->imja,1);
                       +'. '+LEFT(sp10->otch,1)+"."+SPACE(25),25),SPACE(25))},;
                 "Фамилия  Имя   Отчество "},;
                {{||SUMtoSTR(field->sum,16)},"    Сумма ;   основной;   зарплаты"},;
                {{||field->prc},"Процент ;надбавки"},;
                {{||SumToStr(ROUND(field->sum*field->prc/100,0),16)},;
                 "Сумма надбавки"}},m_screen,;
        l_print:={.t.,.t.,.t.,.t.,.t.}

  m_screen:=SAVESCREEN(0,0,MAXROW(),MAXCOL())

  SET SCOREBOARD OFF
  SET DELETE ON
  SET COLOR TO "W+/b,b/w+"
  CLEAR

  USE ("d:\buhgal\sp\sp10") INDEX ("d:\buhgal\sp\sp10") NEW READONLY
  USE ("d:\buhgal\temp\fdopl") NEW
  INDEX ON field->kass+field->tabn to d:\buhgal\temp\fdopl

  SET RELATION TO field->tabn INTO sp10

  m_browse:=TBrowseDB(2,1,MAXROW()-2,MAXCOL()-1)
  DISPBOX( 1, 0, MAXROW()-1, MAXCOL(), B_DOUBLE + " " )

  FOR i:=1 TO LEN(a_col)
     m_Col           := TBColumnNew()
     m_Col:colorblock:=  {|| {1,2}}
     m_Col:headsep    := "─"
     m_Col:colsep     := "│"
     m_col:heading    := a_col[i,2]
     m_col:block      :=a_col[i,1]
     m_browse:addColumn( m_col )
  NEXT

  m_browse:colorspec     := 'w+/b,b/w+,B/W,G/Y,N/R'
  m_browse:colsep        := '│'
  m_browse:SkipBlock     := { |n| SkipOrder(n) }
  m_browse:goBottomBlock := { ||  DBGOBOTTOM()  }
  m_browse:goTopBlock    := { ||  DBGOTOP()  }

  SET CURSOR OFF
  m_browse:right()
  m_browse:right()
  m_browse:right()

  @MAXROW(),0 SayDisp "                       ENTER - исправление    F2 - печать                       " COLOR "b/w"

  DO WHILE .t.
     STABILIZE BROWSE m_browse
     m_browse:colorRect({m_browse:rowPos,1,m_browse:rowPos,m_browse:ColCount},{2,2})
     m_inkey:=INKEY(0)
     DO CASE
        CASE m_inkey == K_DOWN           ; m_browse:down()
//        CASE m_inkey == K_CTRL_END       ; m_browse:panend()
//        CASE m_inkey == K_CTRL_HOME      ; m_browse:panhome()
        CASE m_inkey == K_UP             ; m_browse:up()
        CASE m_inkey == K_PGDN           ; m_browse:pagedown()
        CASE m_inkey == K_PGUP           ; m_browse:pageup()
        CASE m_inkey == K_CTRL_PGUP      ; m_browse:gotop()
        CASE m_inkey == K_CTRL_PGDN      ; m_browse:gobottom()
        CASE m_inkey == K_F10      ; Calc()
        CASE m_inkey == K_F2
             OpenPrn("PRN")
             PrintBrowse(@m_browse,@l_print)
             ClosePrn()
        CASE m_inkey == K_ENTER
//          m_browse:colorRect({m_browse:rowPos,4,m_browse:rowPos,4},{2,2})
             STABILIZE BROWSE m_browse
             SET CURSOR ON
             @ROW(),COL() GET field->prc COLOR "GR+/n"
             READ
             SET CURSOR OFF
        CASE m_inkey == K_ESC .AND. AskUser( , "   Завершить работу ?   " )
             EXIT
     ENDCASE
     m_browse:refreshCurrent()
  ENDDO

  CLOSE FDOPL
  CLOSE SP10
  RESTSCREEN(0,0,MAXROW(),MAXCOL(),m_SCREEN)

RETURN .t.


Function SUMtoSTR(x,m_len)
  LOCAL m_str:="",s:=STR(ABS(x),18,2),i

//  if x==0
//     return ""
//  endif
  m_str:=ALLTRIM(substr(s,1,3))
  FOR i:=1 TO 4
     IF .NOT.EMPTY(SUBSTR(s,3*i+1,3))
        IF .NOT.EMPTY(m_str)
           m_str+="'"+SUBSTR(s,3*i+1,3)
        ELSE
           m_str+=ALLTRIM(SUBSTR(s,3*i+1,3))
        ENDIF
     ENDIF
  NEXT
  m_str+=IF(substr(s,17,2)=='00',"","-"+substr(s,17,2))
  IF x<0
     m_str:="-"+m_str
  ENDIF
  IF m_len<>NIL.AND.m_len>0
     m_str:=IF(LEN(m_str)>m_len,REPLICATE("*",m_len),PADL(m_str,m_len))
  ENDIF

RETURN m_str


STATIC FUNCTION SkipOrder( n )
  LOCAL  ncount  := 0

  IF n > 0
     DO WHILE ncount < n
        DBSKIP()
        // Если конец файла
        IF EOF()
           DBSKIP( -1 )
           EXIT
        END
        ncount++
     ENDDO
  ELSEIF n < 0
     DO WHILE ncount > n
        DBSKIP( -1 )
        IF BOF()
           EXIT
        END
        ncount--
     ENDDO
  END
RETURN ( ncount )


FUNCTION BegInit ()

   LOCAL SwapingSpace := 3          // количество свободного пространства
                                     // на диске в Мбайтах, необходимое для
                                     // работы АРМ "Бухгалтер"

   // ----------------------------------------------------
   // --- УСТАHОВKА ПАРАМЕТРОВ, ОБЩИХ ДЛЯ ВСЕЙ СИСТЕМЫ ---
   // ----------------------------------------------------
   SetCancel ( .f. )
   SetCursor ( SC_NONE )

   Set ( _SET_ESCAPE     , .f. )
   Set ( _SET_SCOREBOARD , .f. )
   Set ( _SET_BELL       , .f. )
   Set ( _SET_DECIMALS   ,  5  )
   Set ( _SET_DELETED    , .t. )
   Set ( _SET_CONFIRM    , .t. )

   SET CENTURY       OFF
   SET DATE          BRITISH

   CLEAR SCREEN

// -------------------------------------
// --- ОБ'ЯВЛЕHИЕ ВHЕШHИХ ПЕРЕМЕHHЫХ ---
// -------------------------------------
   PUBLIC   p_help_code  := 0                     // параметр для экранного HELP
   PUBLIC   txt_clr      := 'bg+/b,n/bg'          // основной цвет символов
   PUBLIC   msg_clr      := 'gr+/r'               // цвет сообщений об ошибках
   PUBLIC   msg_mig_clr  := 'gr+*/r'              // цвет сообщений
                                                  // об ошибках с мерцанием
   PUBLIC   msg1_clr     := 'w+*/bg'              // цвет сообщений с мерцанием
   PUBLIC   box_clr      := 'w/b'                 // цвет рамок и т.п.
   PUBLIC   hlp_clr      := 'n/w,gr+/w'           // цвет справок ( help'а )
   PUBLIC   psw_clr      := 'w+/bg,n/n'           // цвет пароля
   PUBLIC   hello_clr    := 'gr+/b'               // цвет обычного приветствия
   PUBLIC   head_clr     := 'r+/b'                // цвет начальной заставки
   PUBLIC   dos_clr      := SetColor ()           // цвет MS-DOS
   PUBLIC   str_clr      := 'w+/n'                // цвет
   PUBLIC   mnu_clr      := 'w+/b,n/w'            // цвет меню
   PUBLIC   ten_clr      := 'w/n'                 // цвет тени
   PUBLIC   phn_clr      := 'n/w'                 // цвет фона
   PUBLIC   vvod_clr     := 'w+/b,gr+/n,,,w+/b'   // цвет экрана ввода-вывода
   PUBLIC   vvod_mig_clr := 'w+*/b,gr+/n,,,w+/b'  // цвет экрана ввода-вывода
                                                  // с мерцанием
   PUBLIC   hello1_clr   := 'w+/bg,w+/n'          // цвет при вводе даты
   PUBLIC   poisk_clr    := 'gr+/bg'              // цвет шапки окна запроса
                                                  // при поиске и переходе
   PUBLIC   hl_clr       := 'n/w,gr+/n'           // цвет выделенного пункта
                                                  // при экранном вводе-выводе

   PUBLIC   m_dbspath   := ''              // каталог с текущей БД
//   PUBLIC   m_bufpath   := 'd:\buhgal\bf'  // каталог с буферной БД
//   PUBLIC   m_mainpath  := 'd:\buhgal\mn'  // каталог с основной БД
//   PUBLIC   m_sprpath   := 'd:\buhgal\sp'  // каталог со справочниками
   PUBLIC   m_exepath   := 'd:\buhgal\bh'  // каталог для .EXE модуля пакета
//   PUBLIC   m_mash      := 'd:\buhgal\ms'  // каталог для машинограмм
//   PUBLIC   m_struct    := 'd:\buhgal\st'  // каталог с пустыми структурами
                                           // файлов
   PUBLIC   m_syspath   := 'd:\buhgal\js'  // каталог с  системной информацией
   PUBLIC   m_copypath  := 'd:\buhgal\cp'  // каталог для копий

   PUBLIC m_sysparol := 'SYSTEM    '    // --- пароль администратора системы
   PUBLIC m_parol    := ' '             // --- пароль текущего пользователя
   PUBLIC m_oper     := ' '             // --- код оператора ( пользователя )
   PUBLIC m_tabn     := ' '      // --- табельный N оператора ( пользователя )

   PUBLIC m_pol   := ' '         // --- "ый" или "ая"
   PUBLIC m_imja  := ' '         // --- имя-отчество пользователя

   USE &m_syspath\sovhoz NEW
   PUBLIC p_npr := AllTrim ( sovhoz->naim )     // --- наименование предприятия
   USE

   USE &m_syspath\printer NEW
   PUBLIC m_printer := printer->printer         // --- тип принтера:
   PUBLIC m_endpage :=IF(ASCAN(printer->(DBSTRUCT()),{|P|UPPER(p[1])=='ENDPAGE'})<>0,PRINTER->ENDPAGE,64) // --- размер страницы
   USE                                          //     0 - CPF
                                                //     1 - Geniprint
                                                //     2 - Hyundai

   PUBLIC p_paket   := 'АРМ "Бухгалтер"'      // --- название пакета

   PUBLIC m_date    := Date ()                // --- системная ( текущая ) дата
   PUBLIC m2_date   := '  /  /   '

   PUBLIC m_vdoc    := 0                      // --- вид документа
   PUBLIC m_npch    := 0                      // --- номер пачки
   PUBLIC m_ndoc    := 0                      // --- N документа
   PUBLIC m_imjadoc := ''                     // --- название документа

   PUBLIC i := 0

   PUBLIC dbms := 'c'      // --- Тип СУБД: 'd3+'- dBASE III Plus,
                           // --- 'd4' - dBASE IV,'f'-FoxBASE,'c'- Clipper,

   PUBLIC pr_proc       := ''     /* имя запускаемой процедуры */
   PUBLIC pr_vvod       := ''     /* имя процедуры ввода */
   PUBLIC pr_prosmotr   := ''     /* имя процедуры просмотра */
   PUBLIC pr_korrect    := ''     /* имя процедуры исправления */
   PUBLIC pr_print      := ''     /* имя процедуры печати */
   PUBLIC par1_proc     := ''     /* список пар-ров запускаемой процедуры */
   PUBLIC par1_vvod     := ''     /* список пар-ров процедуры ввода */
   PUBLIC par1_prosmotr := ''     /* список пар-ров процедуры просмотра */
   PUBLIC par1_korrect  := ''     /* список пар-ров процедуры исправления */
   PUBLIC par1_print    := ''     /* список пар-ров процедуры печати */

   PUBLIC menu_screen  := ''  // переменная для сохранения экрана меню
   PUBLIC kol_menu     := 25  // количество меню
   PUBLIC kol_zap_menu := 1   // количество пунктов в активном меню
   PUBLIC max_kol_zap  := 40  // максимальное количество пунктов в активном меню
   PUBLIC left         := 2   // у-координата лев. верхн. угла окна с меню
   PUBLIC top          := 1   // х-координата лев. верхн. угла окна с меню
   PUBLIC hl_file      := ''  // имя активизируемого файла

   PUBLIC highlight [ kol_menu ]     // массив номеров выделенных
      Afill ( highlight , 1 )        // пунктов во всех меню

   PUBLIC menu_highlight [kol_menu]  // массив названий меню

   // проверка наличия свободного пространства на диске

RETURN ( NIL )
